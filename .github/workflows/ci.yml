name: Deploy with docker

on:
  push:
    # 分支
    # branches: [ master ] 
    tags: [ v* ]

jobs:
  compile_env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.17.13

      - name: Build Latest armhf dist
        run: |
          chmod +x .github/workflows/scripts/compile/armhf_go.sh
          .github/workflows/scripts/compile/armhf_go.sh
        shell: bash


      - name: Upload artifact - armhf
        uses: actions/upload-artifact@v3
        with:
          name: dist_armhf
          path: /tmp/go.tar.gz
        
  build:
    runs-on: ubuntu-latest
    needs: compile_env
    steps:
      - uses: actions/checkout@v2
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
       
      - name: Login to Docker Hub
        if: ${{ contains(github.ref, 'v') }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Download Armhf
        uses: actions/download-artifact@v3
        with:
          name: dist_armhf

      - name: Set up Docker Buildx
        if: ${{ contains(github.ref, 'v') }}
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        if: ${{ contains(github.ref, 'v') }}
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: |
            ${{ secrets.USERNAME }}/code-server:${{ steps.get_version.outputs.VERSION }}
            ${{ secrets.USERNAME }}/code-server:latest